APP   := OpenSum-It
DEBUG := 1

BEOS_VERS   :=r$(shell uname -r)

# MACHINE=$(shell uname -m)
# ifeq ($(MACHINE), BePC)
	CPU     := x86
# else
# 	CPU     := ppc
# endif

ifeq ($(DEBUG), 1)
	DBG		:= -gdwarf-2
	OPT		:= -O0 -Wall -Wno-multichar -Wno-ctor-dtor-privacy -Woverloaded-virtual -Wno-sign-compare
	SUFFIX  := D
	STRIP   :=
else
	DBG		:= 
	OPT		:= -O3 -Wall -Wno-multichar -Wno-ctor-dtor-privacy -Woverloaded-virtual -Wno-sign-compare
	SUFFIX  := R
	STRIP    = strip $@
endif

DEP_DIR     := dep.$(BEOS_VERS)-$(CPU)-$(SUFFIX)
OBJ_DIR     := obj.$(BEOS_VERS)-$(CPU)-$(SUFFIX)
LIB_DIR     := lib.$(BEOS_VERS)-$(CPU)-$(SUFFIX)

SYS_LIBS 	:= be tracker
LIBS        := mw huffman colorpicker
LIB_FILES   := $(LIB_DIR)/libhuffman.a $(LIB_DIR)/libmw.a $(LIB_DIR)/libcolorpicker.a 
PATHS       := Source/Huffman Source/Metrowerks Source/ColorPicker
IPATHS      := $(PATHS) Source/main

include Build/Makefile.defs

LD      := g++
CC      := gcc
CXX     := g++
RANLIB  := ranlib
AR      := ar -cru
RES     := xres
MIMESET  = mimeset -f $@

ECHO_FILE   = @echo " Processing: $<"
ECHO_TGT    = @echo "   Building: $@"

MAKE_OBJ_DIR := @test -d $(OBJ_DIR) || mkdir $(OBJ_DIR)
MAKE_DEP_DIR := @test -d $(DEP_DIR) || mkdir $(DEP_DIR)
MAKE_LIB_DIR := @test -d $(LIB_DIR) || mkdir $(LIB_DIR)

MAKE_STATIC      = $(AR) $@ $+

MAKE_BSL        := @ Build/MakeBSL.sh
MAKE_CXX         = @ $(CC) -c $< -o $@ $(CPPFLAGS) $(CFLAGS)
MAKE_RSRC	    := rez
MAKE_RDEF        := @ Build/MakeRDEF.sh

MAKE_DEPEND_C   := @ Build/MakeCDepend.sh
MAKE_DEPEND_R   := @ Build/MakeRDepend.sh
MAKE_DEPEND_BSL := @ Build/MakeBSLDepend.sh
MAKE_MAKE       := @ Build/MakeMake.sh

define BUILD_STATIC
$(ECHO_TGT)
$(MAKE_LIB_DIR)
$(MAKE_STATIC)
endef

define BUILD_CXX
$(ECHO_FILE)
$(MAKE_OBJ_DIR)
$(MAKE_CXX)
endef

####################################

RSRC_BSL    := $(wildcard Resources/*.bsl)
RSRC_R      := $(wildcard Resources/*.r)
RSRC_RSRC   := $(wildcard Resources/*.rsrc)
RSRC_       := $(RSRC_BSL:.bsl=.rsrc) $(RSRC_R:.r=.rsrc)
RSRC        := $(RSRC_RSRC) $(foreach file, $(RSRC_), $(addprefix $(OBJ_DIR)/, $(notdir $(file))))
RSRC_DEP_   := $(RSRC_BSL:.bsl=_bsl.d) $(RSRC_R:.r=_r.d)
RSRC_DEPS   := $(foreach file, $(RSRC_DEP_), $(addprefix $(DEP_DIR)/, $(notdir $(file))))

####################################

PATHS_C     := $(PATHS)
PATHS_R     := $(sort $(foreach file, $(RSRC_BSL) $(RSRC_R) $(RSRC_RSRC), $(dir $(file))))

VPATH       := $(addprefix :, $(subst ,:, $(filter-out $($(subst, :, ,$(VPATH))), $(PATHS_C) $(PATHS_R))))
INCLUDES    := $(addprefix -I, $(PATHS_C) )
LD_DIRS     := $(addprefix -L, $(LIB_DIR) ) 
LD_LIBS     := $(addprefix -l, $(LIBS) $(SYS_LIBS) ) 

CPPFLAGS    := $(INCLUDES) $(DEFINES)
CFLAGS      := $(DBG) $(OPT)
RFLAGS      := -IResources -t

####################################

default : $(APP)

include Build/Makefile.rules
include Build/Makefile.mw
include Build/Makefile.huffman
include Build/Makefile.colorpicker

$(APP) : $(LIB_FILES) $(RSRC) $(OBJS)
	$(LD)  -o $@ $(OBJS) $(LD_DIRS) $(LD_LIBS)
	$(STRIP)
	$(RES) -o $@ $(RSRC)
	$(MIMESET)

$(OBJ_DIR)/%.o: %.cpp
	$(BUILD_CXX)

$(OBJ_DIR)/%.rsrc: %.bsl
	$(MAKE_BSL) -o $@ $<

$(OBJ_DIR)/%.rsrc : %.r
	$(ECHO_FILE)
	$(MAKE_RSRC) $(RFLAGS) -o $@ $<

$(DEP_DIR)/%_cpp.d: %.cpp
	$(MAKE_DEP_DIR)
	$(ECHO_TGT)
	$(MAKE_DEPEND_C) $(CPPFLAGS) -c $< -dep $@ -odir $(OBJ_DIR)

sum-it-types.rsrc:
	@ printf "Generating sum-it-types.rsrc from sum-it-types.rdef\n"	
	$(MAKE_RDEF)

$(DEP_DIR)/%_r.d: %.r
	$(MAKE_DEP_DIR)
	$(ECHO_TGT)
	$(MAKE_DEPEND_R) -o $(OBJ_DIR)/$(basename $(<F)).rsrc $(RFLAGS) $< -dep $@

$(DEP_DIR)/%_bsl.d: %.bsl
	$(MAKE_DEP_DIR)
	$(ECHO_TGT)
	$(MAKE_DEPEND_BSL) -o $(OBJ_DIR)/$(basename $(<F)).rsrc $< -dep $@

include $(DEPS) $(RSRC_DEPS)

Build/Makefile.rules Build/Makefile.defs :
	@ printf "Recreating include files\\n"
	$(MAKE_MAKE)

	
.PHONY: make clean list
make:
	@ printf "Generating file list\\n"
	$(MAKE_MAKE)

clean:
	@ printf "Cleaning... "
	@-rm -rf $(APP) $(LIB_DIR) $(OBJ_DIR) $(DEP_DIR) Resources/sum-it-types.rsrc
	@ printf "Done\\n"

list:
	@echo "VPATH: " $(VPATH)
	@echo "PATHS: " $(PATHS)
	@echo "RSRC_DEPS: " $(RSRC_DEPS)
	
